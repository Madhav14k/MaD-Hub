openapi: 3.0.0
info:
  title: MaD-Hub API
  version: 1.0.0
  description: Collaborative Project Tracker API documentation
servers:
  - url: http://localhost:5000/api
paths:
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: { type: string }
                email: { type: string }
                password: { type: string }
      responses:
        '200': { description: User registered }
  /auth/login:
    post:
      summary: Login and get JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: { type: string }
                password: { type: string }
      responses:
        '200': { description: JWT token }
  /projects:
    get:
      summary: List projects for user
      security:
        - bearerAuth: []
      responses:
        '200': { description: List of projects }
    post:
      summary: Create a new project
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: { type: string }
                description: { type: string }
                deadline: { type: string, format: date }
      responses:
        '200': { description: Project created }
  /projects/join:
    post:
      summary: Join a project by invite code
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                inviteCode: { type: string }
      responses:
        '200': { description: Joined project }
  /projects/{projectId}:
    delete:
      summary: Delete a project (owner only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: projectId
          required: true
          schema: { type: integer }
      responses:
        '200': { description: Project deleted }
  /tasks/{projectId}:
    get:
      summary: List tasks for a project
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: projectId
          required: true
          schema: { type: integer }
      responses:
        '200': { description: List of tasks }
    post:
      summary: Create a task in a project
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: projectId
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title: { type: string }
                description: { type: string }
                assigneeId: { type: integer }
      responses:
        '200': { description: Task created }
  /tasks/{taskId}:
    put:
      summary: Update a task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: taskId
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title: { type: string }
                description: { type: string }
                status: { type: string }
                assigneeId: { type: integer }
      responses:
        '200': { description: Task updated }
    delete:
      summary: Delete a task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: taskId
          required: true
          schema: { type: integer }
      responses:
        '200': { description: Task deleted }
  /comments/{taskId}:
    get:
      summary: List comments for a task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: taskId
          required: true
          schema: { type: integer }
      responses:
        '200': { description: List of comments }
    post:
      summary: Add a comment to a task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: taskId
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content: { type: string }
      responses:
        '200': { description: Comment added }
  /attachments/{taskId}:
    post:
      summary: Upload an attachment to a task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: taskId
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200': { description: Attachment uploaded }
  /attachments/download/{filename}:
    get:
      summary: Download an attachment
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: filename
          required: true
          schema: { type: string }
      responses:
        '200': { description: File download }
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
